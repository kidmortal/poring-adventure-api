// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int             @id @default(autoincrement())
  email      String          @unique
  name       String
  classname  String
  level      Int             @default(1)
  experience Int             @default(1)
  silver     Int             @default(20)
  appearance Appearance?
  equipment  EquippedItem[]
  inventory  InventoryItem[]
  market     MarketListing[]
}

model InventoryItem {
  id            Int            @id @default(autoincrement())
  stack         Int
  user          User           @relation(fields: [userEmail], references: [email])
  userEmail     String
  item          Item           @relation(fields: [itemId], references: [id])
  itemId        Int            @unique
  marketListing MarketListing?
}

model EquippedItem {
  id        Int    @id @default(autoincrement())
  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String
  item      Item   @relation(fields: [itemId], references: [id])
  itemId    Int    @unique
}

model Appearance {
  id        Int    @id @default(autoincrement())
  head      String
  gender    String
  costume   String
  user      User   @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail String @unique
}

model MarketListing {
  id          Int           @id @default(autoincrement())
  price       Int
  stack       Int
  item        InventoryItem @relation(fields: [inventoryId], references: [id])
  inventoryId Int           @unique
  seller      User          @relation(fields: [sellerEmail], references: [email], onDelete: Cascade)
  sellerEmail String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  expiresAt   DateTime?
}

model Item {
  id        Int             @id @default(autoincrement())
  name      String
  category  String
  image     String?
  equipped  EquippedItem[]
  inventory InventoryItem[]
}
